@model u21650846_HW03.Models.CombinedViewModel
@using PagedList.Mvc
@using PagedList;
<div>
    <div class="row">
        <div class="col-md-6">
            <h3> Authors</h3>
            <p>
                <a href="#" class="create-link" data-url="@Url.Action("Create", "authors")">Add Author</a>
            </p>
            <div class="indi">
                <table class="table">
                    <tr>
                        <th> Name</th>
                        <th> Surname</th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model.authors)
                    {
                        <tr>
                            <td> @item.name</td>
                            <td> @item.surname</td>
                            <td class="text-end">
                                <!-- Add text-end class here -->
                                <a href="#" class="edit-link" data-url="@Url.Action("Edit", "authors", new { id = item.authorId })">Update</a>
                                <a href="#" class="delete-link" data-url="@Url.Action("Delete", "authors", new { id = item.authorId })">Delete</a>
                            </td>
                        </tr>
                    }
                </table>
                <div class="pagination" id="student-pagination">
                    Page @(Model.authors.PageNumber) of @Model.authors.PageCount
                    @Html.PagedListPager(Model.authors, page => Url.Action("Maintain", new { authorPage = page }), PagedListRenderOptions.ClassicPlusFirstAndLast)

                </div>
            </div>
        </div>

        <div class="col-md-6">
            <h3>Genres </h3>
            <p>
                <a href="#" class="create-link" data-url="@Url.Action("Create", "types")">Add Genre</a>
            </p>
            <div class="indi">
                <table class="table">
                    <tr>
                        <th>Genre </th>
                        <th> </th>

                    </tr>
                    @foreach (var item in Model.types)
                    {
                        <tr>
                            <td> @item.name</td>
                            <td class="text-end">
                                <!-- Add text-end class here -->
                                <a href="#" class="edit-link" data-url="@Url.Action("Edit", "types", new { id = item.typeId })">Update</a>
                                <a href="#" class="delete-link" data-url="@Url.Action("Delete", "types", new { id = item.typeId })">Delete</a>
                            </td>
                        </tr>
                    }
                </table>
                <div class="pagination" id="student-pagination">
                    Page @(Model.types.PageNumber) of @Model.types.PageCount
                    @Html.PagedListPager(Model.types, page => Url.Action("Maintain", new { typePage = page }), PagedListRenderOptions.ClassicPlusFirstAndLast)

                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h3> Borrow History</h3>
            <p>
                <a href="#" class="create-link" data-url="@Url.Action("Create", "borrows")">Add Borrow History</a>
            </p>
            <div class="indi">
                <table class="table table-striped">
                    <tr>
                        <th> Student Name</th>
                        <th> Book Title</th>
                        <th>Date Taken </th>
                        <th> Date Returned</th>
                        <th></th>

                    </tr>
                    @foreach (var item in Model.borrows)
                    {
                        <tr>
                            <td>
                                @item.students.name @item.students.surname
                            </td>
                            <td>
                                @item.books.name
                            </td>
                            <td>
                                @item.takenDate
                            </td>
                            <td>
                                @item.broughtDate
                            </td>
                            <td class="text-end">
                                <!-- Add text-end class here -->
                                <a href="#" class="edit-link" data-url="@Url.Action("Edit", "borrows", new { id = item.borrowId })">Update</a>
                                <a href="#" class="delete-link" data-url="@Url.Action("Delete", "borrows", new { id = item.borrowId })">Delete</a>
                            </td>
                        </tr>
                    }
                </table>
                <div class="pagination" id="student-pagination">
                    Page @(Model.borrows.PageNumber) of @Model.borrows.PageCount
                    @Html.PagedListPager(Model.borrows, page => Url.Action("Maintain", new { borrowPage = page }), PagedListRenderOptions.ClassicPlusFirstAndLast)

                </div>
            </div>
        </div>
    </div>
</div>
<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sample Async CRUD</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        $(function () {

            $(".edit-link, .edit-link-in-modal").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });

            $("#modal-content").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                var url = form.attr("action");
                var formData = form.serialize();

                $.post(url, formData, function (data) {
                    $("#myModal").modal("hide");
                    location.reload();
                });
            });


            $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
                e.preventDefault();
                var url = $(this).data("url");

                $.get(url, function (data) {
                    $("#modal-content").empty();
                    $("#modal-content").html(data);
                    $("#myModal").modal("show");
                });
            });
        });
    </script>

}